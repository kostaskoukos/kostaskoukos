---
import "../base.css";
import Header from "../components/Header.astro";

interface Props {
  title: string;
}

const { title } = Astro.props;
---

<!doctype html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="description" content="Astro description" />
    <meta name="viewport" content="width=device-width" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="generator" content={Astro.generator} />
    <title>{title}</title>
  </head>
  <body
    class="mx-auto bg-background font-mono text-text transition-colors duration-200 md:w-3/5"
  >
    <Header />
    <slot />
    <script is:inline>
      const getThemePreference = () => {
        if (
          typeof localStorage !== "undefined" &&
          localStorage.getItem("theme")
        ) {
          return localStorage.getItem("theme");
        }

        return window.matchMedia("(prefers-color-scheme: dark)").matches
          ? "dark"
          : "light";
      };
      const isDark = getThemePreference() === "dark";
      const doc = document.documentElement;
      doc.classList[isDark ? "add" : "remove"]("dark");

      const observer = new MutationObserver(() => {
        const isDark = doc.classList.contains("dark");
        localStorage.setItem("theme", isDark ? "dark" : "light");
      });
      observer.observe(doc, {
        attributes: true,
        attributeFilter: ["class"],
      });

      document.querySelector("#theme")?.addEventListener("click", () => {
        doc.classList[doc.classList.contains("dark") ? "remove" : "add"](
          "dark",
        );
      });
    </script>
  </body>
</html>
